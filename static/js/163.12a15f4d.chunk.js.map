{"version":3,"file":"static/js/163.12a15f4d.chunk.js","mappings":"4OAIaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FAOzBC,EAAaJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8B,8BCJzBG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,SAAU,GACVC,UAAW,GACXC,aAAc,IAEhBC,SAAU,SAAAC,GAA4C,IAAzCJ,EAAQI,EAARJ,SAAUC,EAASG,EAATH,UAAWC,EAAYE,EAAZF,aAChCP,GACEU,EAAAA,EAAAA,UAAS,CACPC,KAAMN,EACNO,MAAON,EACPO,SAAUN,IAGhB,EAAEO,UAEFC,EAAAA,EAAAA,MAACvB,EAAI,CAAAsB,SAAA,EACHC,EAAAA,EAAAA,MAAClB,EAAU,CAACmB,QAAQ,WAAUF,SAAA,CAAC,iBAE7BZ,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,GAAG,WAAWP,KAAK,WAAWQ,KAAK,OAAOC,YAAY,UAC7DlB,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAACV,KAAK,iBAErBI,EAAAA,EAAAA,MAAClB,EAAU,CAACmB,QAAQ,YAAWF,SAAA,CAAC,kBAE9BZ,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACJC,GAAG,YACHP,KAAK,YACLQ,KAAK,QACLC,YAAY,WAEdlB,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAACV,KAAK,kBAErBI,EAAAA,EAAAA,MAAClB,EAAU,CAACmB,QAAQ,eAAcF,SAAA,CAAC,gBAEjCZ,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACJC,GAAG,eACHP,KAAK,eACLQ,KAAK,WACLC,YAAY,cAEdlB,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAACV,KAAK,qBAErBT,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLH,KAAK,SACLI,QAAQ,YACRC,SAAStB,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,IACtBC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QACjCC,MAAM,UAASf,SAChB,gBAMT,E,UC9De,SAASgB,IACtB,OACEf,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEZ,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAAjB,UACLZ,EAAAA,EAAAA,KAAA,SAAAY,SAAO,oBAETZ,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C,2BCTIiC,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,MACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,SAAU,UACVC,EAAG,kLACD,YACJP,EAAQ,EAAUG,C","sources":["components/registerForm/registerForm.styled.js","components/registerForm/registerForm.jsx","pages/register.jsx","../node_modules/@mui/icons-material/HowToReg.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  max-width: 200px;\n  gap: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FieldLabel = styled.label`\n  font-size: 20px;\n`;\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { FieldLabel, Form } from './registerForm.styled';\nimport { Button } from '@mui/material';\nimport RegisterIcon from '@mui/icons-material/HowToReg';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        userName: '',\n        userEmail: '',\n        userPassword: '',\n      }}\n      onSubmit={({ userName, userEmail, userPassword }) => {\n        dispatch(\n          register({\n            name: userName,\n            email: userEmail,\n            password: userPassword,\n          })\n        );\n      }}\n    >\n      <Form>\n        <FieldLabel htmlFor=\"userName\">\n          Set your name\n          <Field id=\"userName\" name=\"userName\" type=\"text\" placeholder=\"Name\" />\n          <ErrorMessage name=\"userName\" />\n        </FieldLabel>\n        <FieldLabel htmlFor=\"userEmail\">\n          Set your email\n          <Field\n            id=\"userEmail\"\n            name=\"userEmail\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <ErrorMessage name=\"userEmail\" />\n        </FieldLabel>\n        <FieldLabel htmlFor=\"userPassword\">\n          Set password\n          <Field\n            id=\"userPassword\"\n            name=\"userPassword\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <ErrorMessage name=\"userPassword\" />\n        </FieldLabel>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          endIcon={<RegisterIcon />}\n          style={{ width: '169px', height: '30px' }}\n          color=\"success\"\n        >\n          Sign UP\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/registerForm/registerForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"m9 17 3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m4.47 8.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n}), 'HowToReg');\nexports.default = _default;"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","FieldLabel","_templateObject2","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","userName","userEmail","userPassword","onSubmit","_ref","register","name","email","password","children","_jsxs","htmlFor","Field","id","type","placeholder","ErrorMessage","Button","variant","endIcon","RegisterIcon","style","width","height","color","Register","Helmet","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","fillRule","d"],"sourceRoot":""}